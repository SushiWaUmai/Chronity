### YamlMime:XRefMap
sorted: true
references:
- uid: Chronity
  name: Chronity
  href: api/Chronity.html
  commentId: N:Chronity
  fullName: Chronity
  nameWithType: Chronity
- uid: Chronity.EditorTimer
  name: EditorTimer
  href: api/Chronity.EditorTimer.html
  commentId: T:Chronity.EditorTimer
  fullName: Chronity.EditorTimer
  nameWithType: EditorTimer
- uid: Chronity.EditorTimer.#ctor(System.Single,System.Action,System.Action{System.Single},System.Boolean)
  name: EditorTimer(Single, Action, Action<Single>, Boolean)
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer__ctor_System_Single_System_Action_System_Action_System_Single__System_Boolean_
  commentId: M:Chronity.EditorTimer.#ctor(System.Single,System.Action,System.Action{System.Single},System.Boolean)
  name.vb: EditorTimer(Single, Action, Action(Of Single), Boolean)
  fullName: Chronity.EditorTimer.EditorTimer(System.Single, System.Action, System.Action<System.Single>, System.Boolean)
  fullName.vb: Chronity.EditorTimer.EditorTimer(System.Single, System.Action, System.Action(Of System.Single), System.Boolean)
  nameWithType: EditorTimer.EditorTimer(Single, Action, Action<Single>, Boolean)
  nameWithType.vb: EditorTimer.EditorTimer(Single, Action, Action(Of Single), Boolean)
- uid: Chronity.EditorTimer.#ctor*
  name: EditorTimer
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer__ctor_
  commentId: Overload:Chronity.EditorTimer.#ctor
  isSpec: "True"
  fullName: Chronity.EditorTimer.EditorTimer
  nameWithType: EditorTimer.EditorTimer
- uid: Chronity.EditorTimer._timers
  name: _timers
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer__timers
  commentId: F:Chronity.EditorTimer._timers
  fullName: Chronity.EditorTimer._timers
  nameWithType: EditorTimer._timers
- uid: Chronity.EditorTimer.CancelAllTimers
  name: CancelAllTimers()
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_CancelAllTimers
  commentId: M:Chronity.EditorTimer.CancelAllTimers
  fullName: Chronity.EditorTimer.CancelAllTimers()
  nameWithType: EditorTimer.CancelAllTimers()
- uid: Chronity.EditorTimer.CancelAllTimers*
  name: CancelAllTimers
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_CancelAllTimers_
  commentId: Overload:Chronity.EditorTimer.CancelAllTimers
  isSpec: "True"
  fullName: Chronity.EditorTimer.CancelAllTimers
  nameWithType: EditorTimer.CancelAllTimers
- uid: Chronity.EditorTimer.CurrentTime
  name: CurrentTime
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_CurrentTime
  commentId: P:Chronity.EditorTimer.CurrentTime
  fullName: Chronity.EditorTimer.CurrentTime
  nameWithType: EditorTimer.CurrentTime
- uid: Chronity.EditorTimer.CurrentTime*
  name: CurrentTime
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_CurrentTime_
  commentId: Overload:Chronity.EditorTimer.CurrentTime
  isSpec: "True"
  fullName: Chronity.EditorTimer.CurrentTime
  nameWithType: EditorTimer.CurrentTime
- uid: Chronity.EditorTimer.Finalize
  name: Finalize()
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_Finalize
  commentId: M:Chronity.EditorTimer.Finalize
  fullName: Chronity.EditorTimer.Finalize()
  nameWithType: EditorTimer.Finalize()
- uid: Chronity.EditorTimer.Finalize*
  name: Finalize
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_Finalize_
  commentId: Overload:Chronity.EditorTimer.Finalize
  isSpec: "True"
  fullName: Chronity.EditorTimer.Finalize
  nameWithType: EditorTimer.Finalize
- uid: Chronity.EditorTimer.PauseAllTimers
  name: PauseAllTimers()
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_PauseAllTimers
  commentId: M:Chronity.EditorTimer.PauseAllTimers
  fullName: Chronity.EditorTimer.PauseAllTimers()
  nameWithType: EditorTimer.PauseAllTimers()
- uid: Chronity.EditorTimer.PauseAllTimers*
  name: PauseAllTimers
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_PauseAllTimers_
  commentId: Overload:Chronity.EditorTimer.PauseAllTimers
  isSpec: "True"
  fullName: Chronity.EditorTimer.PauseAllTimers
  nameWithType: EditorTimer.PauseAllTimers
- uid: Chronity.EditorTimer.Register(System.Single,System.Action,System.Action{System.Single},System.Boolean)
  name: Register(Single, Action, Action<Single>, Boolean)
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_Register_System_Single_System_Action_System_Action_System_Single__System_Boolean_
  commentId: M:Chronity.EditorTimer.Register(System.Single,System.Action,System.Action{System.Single},System.Boolean)
  name.vb: Register(Single, Action, Action(Of Single), Boolean)
  fullName: Chronity.EditorTimer.Register(System.Single, System.Action, System.Action<System.Single>, System.Boolean)
  fullName.vb: Chronity.EditorTimer.Register(System.Single, System.Action, System.Action(Of System.Single), System.Boolean)
  nameWithType: EditorTimer.Register(Single, Action, Action<Single>, Boolean)
  nameWithType.vb: EditorTimer.Register(Single, Action, Action(Of Single), Boolean)
- uid: Chronity.EditorTimer.Register*
  name: Register
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_Register_
  commentId: Overload:Chronity.EditorTimer.Register
  isSpec: "True"
  fullName: Chronity.EditorTimer.Register
  nameWithType: EditorTimer.Register
- uid: Chronity.EditorTimer.ResumeAllTimers
  name: ResumeAllTimers()
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_ResumeAllTimers
  commentId: M:Chronity.EditorTimer.ResumeAllTimers
  fullName: Chronity.EditorTimer.ResumeAllTimers()
  nameWithType: EditorTimer.ResumeAllTimers()
- uid: Chronity.EditorTimer.ResumeAllTimers*
  name: ResumeAllTimers
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_ResumeAllTimers_
  commentId: Overload:Chronity.EditorTimer.ResumeAllTimers
  isSpec: "True"
  fullName: Chronity.EditorTimer.ResumeAllTimers
  nameWithType: EditorTimer.ResumeAllTimers
- uid: Chronity.EditorTimer.Update
  name: Update()
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_Update
  commentId: M:Chronity.EditorTimer.Update
  fullName: Chronity.EditorTimer.Update()
  nameWithType: EditorTimer.Update()
- uid: Chronity.EditorTimer.Update*
  name: Update
  href: api/Chronity.EditorTimer.html#Chronity_EditorTimer_Update_
  commentId: Overload:Chronity.EditorTimer.Update
  isSpec: "True"
  fullName: Chronity.EditorTimer.Update
  nameWithType: EditorTimer.Update
- uid: Chronity.Timer
  name: Timer
  href: api/Chronity.Timer.html
  commentId: T:Chronity.Timer
  fullName: Chronity.Timer
  nameWithType: Timer
- uid: Chronity.Timer.#ctor(System.Single,System.Action,System.Action{System.Single},System.Boolean,System.Boolean,System.Boolean,MonoBehaviour)
  name: Timer(Single, Action, Action<Single>, Boolean, Boolean, Boolean, MonoBehaviour)
  href: api/Chronity.Timer.html#Chronity_Timer__ctor_System_Single_System_Action_System_Action_System_Single__System_Boolean_System_Boolean_System_Boolean_MonoBehaviour_
  commentId: M:Chronity.Timer.#ctor(System.Single,System.Action,System.Action{System.Single},System.Boolean,System.Boolean,System.Boolean,MonoBehaviour)
  name.vb: Timer(Single, Action, Action(Of Single), Boolean, Boolean, Boolean, MonoBehaviour)
  fullName: Chronity.Timer.Timer(System.Single, System.Action, System.Action<System.Single>, System.Boolean, System.Boolean, System.Boolean, MonoBehaviour)
  fullName.vb: Chronity.Timer.Timer(System.Single, System.Action, System.Action(Of System.Single), System.Boolean, System.Boolean, System.Boolean, MonoBehaviour)
  nameWithType: Timer.Timer(Single, Action, Action<Single>, Boolean, Boolean, Boolean, MonoBehaviour)
  nameWithType.vb: Timer.Timer(Single, Action, Action(Of Single), Boolean, Boolean, Boolean, MonoBehaviour)
- uid: Chronity.Timer.#ctor*
  name: Timer
  href: api/Chronity.Timer.html#Chronity_Timer__ctor_
  commentId: Overload:Chronity.Timer.#ctor
  isSpec: "True"
  fullName: Chronity.Timer.Timer
  nameWithType: Timer.Timer
- uid: Chronity.Timer._hasAttachedBehavior
  name: _hasAttachedBehavior
  href: api/Chronity.Timer.html#Chronity_Timer__hasAttachedBehavior
  commentId: F:Chronity.Timer._hasAttachedBehavior
  fullName: Chronity.Timer._hasAttachedBehavior
  nameWithType: Timer._hasAttachedBehavior
- uid: Chronity.Timer.AttachedBehavior
  name: AttachedBehavior
  href: api/Chronity.Timer.html#Chronity_Timer_AttachedBehavior
  commentId: P:Chronity.Timer.AttachedBehavior
  fullName: Chronity.Timer.AttachedBehavior
  nameWithType: Timer.AttachedBehavior
- uid: Chronity.Timer.AttachedBehavior*
  name: AttachedBehavior
  href: api/Chronity.Timer.html#Chronity_Timer_AttachedBehavior_
  commentId: Overload:Chronity.Timer.AttachedBehavior
  isSpec: "True"
  fullName: Chronity.Timer.AttachedBehavior
  nameWithType: Timer.AttachedBehavior
- uid: Chronity.Timer.AttachedBehaviorDestroyed
  name: AttachedBehaviorDestroyed
  href: api/Chronity.Timer.html#Chronity_Timer_AttachedBehaviorDestroyed
  commentId: P:Chronity.Timer.AttachedBehaviorDestroyed
  fullName: Chronity.Timer.AttachedBehaviorDestroyed
  nameWithType: Timer.AttachedBehaviorDestroyed
- uid: Chronity.Timer.AttachedBehaviorDestroyed*
  name: AttachedBehaviorDestroyed
  href: api/Chronity.Timer.html#Chronity_Timer_AttachedBehaviorDestroyed_
  commentId: Overload:Chronity.Timer.AttachedBehaviorDestroyed
  isSpec: "True"
  fullName: Chronity.Timer.AttachedBehaviorDestroyed
  nameWithType: Timer.AttachedBehaviorDestroyed
- uid: Chronity.Timer.CancelAllTimers
  name: CancelAllTimers()
  href: api/Chronity.Timer.html#Chronity_Timer_CancelAllTimers
  commentId: M:Chronity.Timer.CancelAllTimers
  fullName: Chronity.Timer.CancelAllTimers()
  nameWithType: Timer.CancelAllTimers()
- uid: Chronity.Timer.CancelAllTimers*
  name: CancelAllTimers
  href: api/Chronity.Timer.html#Chronity_Timer_CancelAllTimers_
  commentId: Overload:Chronity.Timer.CancelAllTimers
  isSpec: "True"
  fullName: Chronity.Timer.CancelAllTimers
  nameWithType: Timer.CancelAllTimers
- uid: Chronity.Timer.CancelOnSceneChange
  name: CancelOnSceneChange
  href: api/Chronity.Timer.html#Chronity_Timer_CancelOnSceneChange
  commentId: P:Chronity.Timer.CancelOnSceneChange
  fullName: Chronity.Timer.CancelOnSceneChange
  nameWithType: Timer.CancelOnSceneChange
- uid: Chronity.Timer.CancelOnSceneChange*
  name: CancelOnSceneChange
  href: api/Chronity.Timer.html#Chronity_Timer_CancelOnSceneChange_
  commentId: Overload:Chronity.Timer.CancelOnSceneChange
  isSpec: "True"
  fullName: Chronity.Timer.CancelOnSceneChange
  nameWithType: Timer.CancelOnSceneChange
- uid: Chronity.Timer.CurrentTime
  name: CurrentTime
  href: api/Chronity.Timer.html#Chronity_Timer_CurrentTime
  commentId: P:Chronity.Timer.CurrentTime
  fullName: Chronity.Timer.CurrentTime
  nameWithType: Timer.CurrentTime
- uid: Chronity.Timer.CurrentTime*
  name: CurrentTime
  href: api/Chronity.Timer.html#Chronity_Timer_CurrentTime_
  commentId: Overload:Chronity.Timer.CurrentTime
  isSpec: "True"
  fullName: Chronity.Timer.CurrentTime
  nameWithType: Timer.CurrentTime
- uid: Chronity.Timer.IsDone
  name: IsDone
  href: api/Chronity.Timer.html#Chronity_Timer_IsDone
  commentId: P:Chronity.Timer.IsDone
  fullName: Chronity.Timer.IsDone
  nameWithType: Timer.IsDone
- uid: Chronity.Timer.IsDone*
  name: IsDone
  href: api/Chronity.Timer.html#Chronity_Timer_IsDone_
  commentId: Overload:Chronity.Timer.IsDone
  isSpec: "True"
  fullName: Chronity.Timer.IsDone
  nameWithType: Timer.IsDone
- uid: Chronity.Timer.PauseAllTimers
  name: PauseAllTimers()
  href: api/Chronity.Timer.html#Chronity_Timer_PauseAllTimers
  commentId: M:Chronity.Timer.PauseAllTimers
  fullName: Chronity.Timer.PauseAllTimers()
  nameWithType: Timer.PauseAllTimers()
- uid: Chronity.Timer.PauseAllTimers*
  name: PauseAllTimers
  href: api/Chronity.Timer.html#Chronity_Timer_PauseAllTimers_
  commentId: Overload:Chronity.Timer.PauseAllTimers
  isSpec: "True"
  fullName: Chronity.Timer.PauseAllTimers
  nameWithType: Timer.PauseAllTimers
- uid: Chronity.Timer.Register(System.Single,System.Action,System.Action{System.Single},System.Boolean,System.Boolean,System.Boolean,MonoBehaviour)
  name: Register(Single, Action, Action<Single>, Boolean, Boolean, Boolean, MonoBehaviour)
  href: api/Chronity.Timer.html#Chronity_Timer_Register_System_Single_System_Action_System_Action_System_Single__System_Boolean_System_Boolean_System_Boolean_MonoBehaviour_
  commentId: M:Chronity.Timer.Register(System.Single,System.Action,System.Action{System.Single},System.Boolean,System.Boolean,System.Boolean,MonoBehaviour)
  name.vb: Register(Single, Action, Action(Of Single), Boolean, Boolean, Boolean, MonoBehaviour)
  fullName: Chronity.Timer.Register(System.Single, System.Action, System.Action<System.Single>, System.Boolean, System.Boolean, System.Boolean, MonoBehaviour)
  fullName.vb: Chronity.Timer.Register(System.Single, System.Action, System.Action(Of System.Single), System.Boolean, System.Boolean, System.Boolean, MonoBehaviour)
  nameWithType: Timer.Register(Single, Action, Action<Single>, Boolean, Boolean, Boolean, MonoBehaviour)
  nameWithType.vb: Timer.Register(Single, Action, Action(Of Single), Boolean, Boolean, Boolean, MonoBehaviour)
- uid: Chronity.Timer.Register*
  name: Register
  href: api/Chronity.Timer.html#Chronity_Timer_Register_
  commentId: Overload:Chronity.Timer.Register
  isSpec: "True"
  fullName: Chronity.Timer.Register
  nameWithType: Timer.Register
- uid: Chronity.Timer.ResumeAllTimers
  name: ResumeAllTimers()
  href: api/Chronity.Timer.html#Chronity_Timer_ResumeAllTimers
  commentId: M:Chronity.Timer.ResumeAllTimers
  fullName: Chronity.Timer.ResumeAllTimers()
  nameWithType: Timer.ResumeAllTimers()
- uid: Chronity.Timer.ResumeAllTimers*
  name: ResumeAllTimers
  href: api/Chronity.Timer.html#Chronity_Timer_ResumeAllTimers_
  commentId: Overload:Chronity.Timer.ResumeAllTimers
  isSpec: "True"
  fullName: Chronity.Timer.ResumeAllTimers
  nameWithType: Timer.ResumeAllTimers
- uid: Chronity.Timer.TimerManager
  name: Timer.TimerManager
  href: api/Chronity.Timer.TimerManager.html
  commentId: T:Chronity.Timer.TimerManager
  fullName: Chronity.Timer.TimerManager
  nameWithType: Timer.TimerManager
- uid: Chronity.Timer.TimerManager._singleton
  name: _singleton
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager__singleton
  commentId: F:Chronity.Timer.TimerManager._singleton
  fullName: Chronity.Timer.TimerManager._singleton
  nameWithType: Timer.TimerManager._singleton
- uid: Chronity.Timer.TimerManager._timers
  name: _timers
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager__timers
  commentId: F:Chronity.Timer.TimerManager._timers
  fullName: Chronity.Timer.TimerManager._timers
  nameWithType: Timer.TimerManager._timers
- uid: Chronity.Timer.TimerManager.Awake
  name: Awake()
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_Awake
  commentId: M:Chronity.Timer.TimerManager.Awake
  fullName: Chronity.Timer.TimerManager.Awake()
  nameWithType: Timer.TimerManager.Awake()
- uid: Chronity.Timer.TimerManager.Awake*
  name: Awake
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_Awake_
  commentId: Overload:Chronity.Timer.TimerManager.Awake
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.Awake
  nameWithType: Timer.TimerManager.Awake
- uid: Chronity.Timer.TimerManager.CancelAllTimers
  name: CancelAllTimers()
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_CancelAllTimers
  commentId: M:Chronity.Timer.TimerManager.CancelAllTimers
  fullName: Chronity.Timer.TimerManager.CancelAllTimers()
  nameWithType: Timer.TimerManager.CancelAllTimers()
- uid: Chronity.Timer.TimerManager.CancelAllTimers*
  name: CancelAllTimers
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_CancelAllTimers_
  commentId: Overload:Chronity.Timer.TimerManager.CancelAllTimers
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.CancelAllTimers
  nameWithType: Timer.TimerManager.CancelAllTimers
- uid: Chronity.Timer.TimerManager.HandleSceneChange(Scene,Scene)
  name: HandleSceneChange(Scene, Scene)
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_HandleSceneChange_Scene_Scene_
  commentId: M:Chronity.Timer.TimerManager.HandleSceneChange(Scene,Scene)
  fullName: Chronity.Timer.TimerManager.HandleSceneChange(Scene, Scene)
  nameWithType: Timer.TimerManager.HandleSceneChange(Scene, Scene)
- uid: Chronity.Timer.TimerManager.HandleSceneChange*
  name: HandleSceneChange
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_HandleSceneChange_
  commentId: Overload:Chronity.Timer.TimerManager.HandleSceneChange
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.HandleSceneChange
  nameWithType: Timer.TimerManager.HandleSceneChange
- uid: Chronity.Timer.TimerManager.OnDestroy
  name: OnDestroy()
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_OnDestroy
  commentId: M:Chronity.Timer.TimerManager.OnDestroy
  fullName: Chronity.Timer.TimerManager.OnDestroy()
  nameWithType: Timer.TimerManager.OnDestroy()
- uid: Chronity.Timer.TimerManager.OnDestroy*
  name: OnDestroy
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_OnDestroy_
  commentId: Overload:Chronity.Timer.TimerManager.OnDestroy
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.OnDestroy
  nameWithType: Timer.TimerManager.OnDestroy
- uid: Chronity.Timer.TimerManager.PauseAllTimers
  name: PauseAllTimers()
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_PauseAllTimers
  commentId: M:Chronity.Timer.TimerManager.PauseAllTimers
  fullName: Chronity.Timer.TimerManager.PauseAllTimers()
  nameWithType: Timer.TimerManager.PauseAllTimers()
- uid: Chronity.Timer.TimerManager.PauseAllTimers*
  name: PauseAllTimers
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_PauseAllTimers_
  commentId: Overload:Chronity.Timer.TimerManager.PauseAllTimers
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.PauseAllTimers
  nameWithType: Timer.TimerManager.PauseAllTimers
- uid: Chronity.Timer.TimerManager.RegisterTimer(Chronity.Timer)
  name: RegisterTimer(Timer)
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_RegisterTimer_Chronity_Timer_
  commentId: M:Chronity.Timer.TimerManager.RegisterTimer(Chronity.Timer)
  fullName: Chronity.Timer.TimerManager.RegisterTimer(Chronity.Timer)
  nameWithType: Timer.TimerManager.RegisterTimer(Timer)
- uid: Chronity.Timer.TimerManager.RegisterTimer*
  name: RegisterTimer
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_RegisterTimer_
  commentId: Overload:Chronity.Timer.TimerManager.RegisterTimer
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.RegisterTimer
  nameWithType: Timer.TimerManager.RegisterTimer
- uid: Chronity.Timer.TimerManager.RemoveAbundantTimers
  name: RemoveAbundantTimers()
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_RemoveAbundantTimers
  commentId: M:Chronity.Timer.TimerManager.RemoveAbundantTimers
  fullName: Chronity.Timer.TimerManager.RemoveAbundantTimers()
  nameWithType: Timer.TimerManager.RemoveAbundantTimers()
- uid: Chronity.Timer.TimerManager.RemoveAbundantTimers*
  name: RemoveAbundantTimers
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_RemoveAbundantTimers_
  commentId: Overload:Chronity.Timer.TimerManager.RemoveAbundantTimers
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.RemoveAbundantTimers
  nameWithType: Timer.TimerManager.RemoveAbundantTimers
- uid: Chronity.Timer.TimerManager.ResumeAllTimers
  name: ResumeAllTimers()
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_ResumeAllTimers
  commentId: M:Chronity.Timer.TimerManager.ResumeAllTimers
  fullName: Chronity.Timer.TimerManager.ResumeAllTimers()
  nameWithType: Timer.TimerManager.ResumeAllTimers()
- uid: Chronity.Timer.TimerManager.ResumeAllTimers*
  name: ResumeAllTimers
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_ResumeAllTimers_
  commentId: Overload:Chronity.Timer.TimerManager.ResumeAllTimers
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.ResumeAllTimers
  nameWithType: Timer.TimerManager.ResumeAllTimers
- uid: Chronity.Timer.TimerManager.Singleton
  name: Singleton
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_Singleton
  commentId: P:Chronity.Timer.TimerManager.Singleton
  fullName: Chronity.Timer.TimerManager.Singleton
  nameWithType: Timer.TimerManager.Singleton
- uid: Chronity.Timer.TimerManager.Singleton*
  name: Singleton
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_Singleton_
  commentId: Overload:Chronity.Timer.TimerManager.Singleton
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.Singleton
  nameWithType: Timer.TimerManager.Singleton
- uid: Chronity.Timer.TimerManager.Start
  name: Start()
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_Start
  commentId: M:Chronity.Timer.TimerManager.Start
  fullName: Chronity.Timer.TimerManager.Start()
  nameWithType: Timer.TimerManager.Start()
- uid: Chronity.Timer.TimerManager.Start*
  name: Start
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_Start_
  commentId: Overload:Chronity.Timer.TimerManager.Start
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.Start
  nameWithType: Timer.TimerManager.Start
- uid: Chronity.Timer.TimerManager.Update
  name: Update()
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_Update
  commentId: M:Chronity.Timer.TimerManager.Update
  fullName: Chronity.Timer.TimerManager.Update()
  nameWithType: Timer.TimerManager.Update()
- uid: Chronity.Timer.TimerManager.Update*
  name: Update
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_Update_
  commentId: Overload:Chronity.Timer.TimerManager.Update
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.Update
  nameWithType: Timer.TimerManager.Update
- uid: Chronity.Timer.TimerManager.UpdateAllTimers
  name: UpdateAllTimers()
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_UpdateAllTimers
  commentId: M:Chronity.Timer.TimerManager.UpdateAllTimers
  fullName: Chronity.Timer.TimerManager.UpdateAllTimers()
  nameWithType: Timer.TimerManager.UpdateAllTimers()
- uid: Chronity.Timer.TimerManager.UpdateAllTimers*
  name: UpdateAllTimers
  href: api/Chronity.Timer.TimerManager.html#Chronity_Timer_TimerManager_UpdateAllTimers_
  commentId: Overload:Chronity.Timer.TimerManager.UpdateAllTimers
  isSpec: "True"
  fullName: Chronity.Timer.TimerManager.UpdateAllTimers
  nameWithType: Timer.TimerManager.UpdateAllTimers
- uid: Chronity.Timer.UsesRealTime
  name: UsesRealTime
  href: api/Chronity.Timer.html#Chronity_Timer_UsesRealTime
  commentId: P:Chronity.Timer.UsesRealTime
  fullName: Chronity.Timer.UsesRealTime
  nameWithType: Timer.UsesRealTime
- uid: Chronity.Timer.UsesRealTime*
  name: UsesRealTime
  href: api/Chronity.Timer.html#Chronity_Timer_UsesRealTime_
  commentId: Overload:Chronity.Timer.UsesRealTime
  isSpec: "True"
  fullName: Chronity.Timer.UsesRealTime
  nameWithType: Timer.UsesRealTime
- uid: Chronity.TimerBase
  name: TimerBase
  href: api/Chronity.TimerBase.html
  commentId: T:Chronity.TimerBase
  fullName: Chronity.TimerBase
  nameWithType: TimerBase
- uid: Chronity.TimerBase.#ctor(System.Single,System.Action,System.Action{System.Single},System.Boolean)
  name: TimerBase(Single, Action, Action<Single>, Boolean)
  href: api/Chronity.TimerBase.html#Chronity_TimerBase__ctor_System_Single_System_Action_System_Action_System_Single__System_Boolean_
  commentId: M:Chronity.TimerBase.#ctor(System.Single,System.Action,System.Action{System.Single},System.Boolean)
  name.vb: TimerBase(Single, Action, Action(Of Single), Boolean)
  fullName: Chronity.TimerBase.TimerBase(System.Single, System.Action, System.Action<System.Single>, System.Boolean)
  fullName.vb: Chronity.TimerBase.TimerBase(System.Single, System.Action, System.Action(Of System.Single), System.Boolean)
  nameWithType: TimerBase.TimerBase(Single, Action, Action<Single>, Boolean)
  nameWithType.vb: TimerBase.TimerBase(Single, Action, Action(Of Single), Boolean)
- uid: Chronity.TimerBase.#ctor*
  name: TimerBase
  href: api/Chronity.TimerBase.html#Chronity_TimerBase__ctor_
  commentId: Overload:Chronity.TimerBase.#ctor
  isSpec: "True"
  fullName: Chronity.TimerBase.TimerBase
  nameWithType: TimerBase.TimerBase
- uid: Chronity.TimerBase._endTime
  name: _endTime
  href: api/Chronity.TimerBase.html#Chronity_TimerBase__endTime
  commentId: P:Chronity.TimerBase._endTime
  fullName: Chronity.TimerBase._endTime
  nameWithType: TimerBase._endTime
- uid: Chronity.TimerBase._endTime*
  name: _endTime
  href: api/Chronity.TimerBase.html#Chronity_TimerBase__endTime_
  commentId: Overload:Chronity.TimerBase._endTime
  isSpec: "True"
  fullName: Chronity.TimerBase._endTime
  nameWithType: TimerBase._endTime
- uid: Chronity.TimerBase._lastTime
  name: _lastTime
  href: api/Chronity.TimerBase.html#Chronity_TimerBase__lastTime
  commentId: F:Chronity.TimerBase._lastTime
  fullName: Chronity.TimerBase._lastTime
  nameWithType: TimerBase._lastTime
- uid: Chronity.TimerBase._onComplete
  name: _onComplete
  href: api/Chronity.TimerBase.html#Chronity_TimerBase__onComplete
  commentId: F:Chronity.TimerBase._onComplete
  fullName: Chronity.TimerBase._onComplete
  nameWithType: TimerBase._onComplete
- uid: Chronity.TimerBase._onUpdate
  name: _onUpdate
  href: api/Chronity.TimerBase.html#Chronity_TimerBase__onUpdate
  commentId: F:Chronity.TimerBase._onUpdate
  fullName: Chronity.TimerBase._onUpdate
  nameWithType: TimerBase._onUpdate
- uid: Chronity.TimerBase._startTime
  name: _startTime
  href: api/Chronity.TimerBase.html#Chronity_TimerBase__startTime
  commentId: F:Chronity.TimerBase._startTime
  fullName: Chronity.TimerBase._startTime
  nameWithType: TimerBase._startTime
- uid: Chronity.TimerBase.Cancel
  name: Cancel()
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Cancel
  commentId: M:Chronity.TimerBase.Cancel
  fullName: Chronity.TimerBase.Cancel()
  nameWithType: TimerBase.Cancel()
- uid: Chronity.TimerBase.Cancel*
  name: Cancel
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Cancel_
  commentId: Overload:Chronity.TimerBase.Cancel
  isSpec: "True"
  fullName: Chronity.TimerBase.Cancel
  nameWithType: TimerBase.Cancel
- uid: Chronity.TimerBase.CheckTime
  name: CheckTime()
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_CheckTime
  commentId: M:Chronity.TimerBase.CheckTime
  fullName: Chronity.TimerBase.CheckTime()
  nameWithType: TimerBase.CheckTime()
- uid: Chronity.TimerBase.CheckTime*
  name: CheckTime
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_CheckTime_
  commentId: Overload:Chronity.TimerBase.CheckTime
  isSpec: "True"
  fullName: Chronity.TimerBase.CheckTime
  nameWithType: TimerBase.CheckTime
- uid: Chronity.TimerBase.CurrentTime
  name: CurrentTime
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_CurrentTime
  commentId: P:Chronity.TimerBase.CurrentTime
  fullName: Chronity.TimerBase.CurrentTime
  nameWithType: TimerBase.CurrentTime
- uid: Chronity.TimerBase.CurrentTime*
  name: CurrentTime
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_CurrentTime_
  commentId: Overload:Chronity.TimerBase.CurrentTime
  isSpec: "True"
  fullName: Chronity.TimerBase.CurrentTime
  nameWithType: TimerBase.CurrentTime
- uid: Chronity.TimerBase.Duration
  name: Duration
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Duration
  commentId: P:Chronity.TimerBase.Duration
  fullName: Chronity.TimerBase.Duration
  nameWithType: TimerBase.Duration
- uid: Chronity.TimerBase.Duration*
  name: Duration
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Duration_
  commentId: Overload:Chronity.TimerBase.Duration
  isSpec: "True"
  fullName: Chronity.TimerBase.Duration
  nameWithType: TimerBase.Duration
- uid: Chronity.TimerBase.HandlePause
  name: HandlePause()
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_HandlePause
  commentId: M:Chronity.TimerBase.HandlePause
  fullName: Chronity.TimerBase.HandlePause()
  nameWithType: TimerBase.HandlePause()
- uid: Chronity.TimerBase.HandlePause*
  name: HandlePause
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_HandlePause_
  commentId: Overload:Chronity.TimerBase.HandlePause
  isSpec: "True"
  fullName: Chronity.TimerBase.HandlePause
  nameWithType: TimerBase.HandlePause
- uid: Chronity.TimerBase.HandleUpdate
  name: HandleUpdate()
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_HandleUpdate
  commentId: M:Chronity.TimerBase.HandleUpdate
  fullName: Chronity.TimerBase.HandleUpdate()
  nameWithType: TimerBase.HandleUpdate()
- uid: Chronity.TimerBase.HandleUpdate*
  name: HandleUpdate
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_HandleUpdate_
  commentId: Overload:Chronity.TimerBase.HandleUpdate
  isSpec: "True"
  fullName: Chronity.TimerBase.HandleUpdate
  nameWithType: TimerBase.HandleUpdate
- uid: Chronity.TimerBase.IsCanceled
  name: IsCanceled
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsCanceled
  commentId: P:Chronity.TimerBase.IsCanceled
  fullName: Chronity.TimerBase.IsCanceled
  nameWithType: TimerBase.IsCanceled
- uid: Chronity.TimerBase.IsCanceled*
  name: IsCanceled
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsCanceled_
  commentId: Overload:Chronity.TimerBase.IsCanceled
  isSpec: "True"
  fullName: Chronity.TimerBase.IsCanceled
  nameWithType: TimerBase.IsCanceled
- uid: Chronity.TimerBase.IsCompleted
  name: IsCompleted
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsCompleted
  commentId: P:Chronity.TimerBase.IsCompleted
  fullName: Chronity.TimerBase.IsCompleted
  nameWithType: TimerBase.IsCompleted
- uid: Chronity.TimerBase.IsCompleted*
  name: IsCompleted
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsCompleted_
  commentId: Overload:Chronity.TimerBase.IsCompleted
  isSpec: "True"
  fullName: Chronity.TimerBase.IsCompleted
  nameWithType: TimerBase.IsCompleted
- uid: Chronity.TimerBase.IsDone
  name: IsDone
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsDone
  commentId: P:Chronity.TimerBase.IsDone
  fullName: Chronity.TimerBase.IsDone
  nameWithType: TimerBase.IsDone
- uid: Chronity.TimerBase.IsDone*
  name: IsDone
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsDone_
  commentId: Overload:Chronity.TimerBase.IsDone
  isSpec: "True"
  fullName: Chronity.TimerBase.IsDone
  nameWithType: TimerBase.IsDone
- uid: Chronity.TimerBase.IsLooped
  name: IsLooped
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsLooped
  commentId: P:Chronity.TimerBase.IsLooped
  fullName: Chronity.TimerBase.IsLooped
  nameWithType: TimerBase.IsLooped
- uid: Chronity.TimerBase.IsLooped*
  name: IsLooped
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsLooped_
  commentId: Overload:Chronity.TimerBase.IsLooped
  isSpec: "True"
  fullName: Chronity.TimerBase.IsLooped
  nameWithType: TimerBase.IsLooped
- uid: Chronity.TimerBase.IsPaused
  name: IsPaused
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsPaused
  commentId: P:Chronity.TimerBase.IsPaused
  fullName: Chronity.TimerBase.IsPaused
  nameWithType: TimerBase.IsPaused
- uid: Chronity.TimerBase.IsPaused*
  name: IsPaused
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_IsPaused_
  commentId: Overload:Chronity.TimerBase.IsPaused
  isSpec: "True"
  fullName: Chronity.TimerBase.IsPaused
  nameWithType: TimerBase.IsPaused
- uid: Chronity.TimerBase.Pause
  name: Pause()
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Pause
  commentId: M:Chronity.TimerBase.Pause
  fullName: Chronity.TimerBase.Pause()
  nameWithType: TimerBase.Pause()
- uid: Chronity.TimerBase.Pause*
  name: Pause
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Pause_
  commentId: Overload:Chronity.TimerBase.Pause
  isSpec: "True"
  fullName: Chronity.TimerBase.Pause
  nameWithType: TimerBase.Pause
- uid: Chronity.TimerBase.RatioComplete
  name: RatioComplete
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_RatioComplete
  commentId: P:Chronity.TimerBase.RatioComplete
  fullName: Chronity.TimerBase.RatioComplete
  nameWithType: TimerBase.RatioComplete
- uid: Chronity.TimerBase.RatioComplete*
  name: RatioComplete
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_RatioComplete_
  commentId: Overload:Chronity.TimerBase.RatioComplete
  isSpec: "True"
  fullName: Chronity.TimerBase.RatioComplete
  nameWithType: TimerBase.RatioComplete
- uid: Chronity.TimerBase.RatioRemaining
  name: RatioRemaining
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_RatioRemaining
  commentId: P:Chronity.TimerBase.RatioRemaining
  fullName: Chronity.TimerBase.RatioRemaining
  nameWithType: TimerBase.RatioRemaining
- uid: Chronity.TimerBase.RatioRemaining*
  name: RatioRemaining
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_RatioRemaining_
  commentId: Overload:Chronity.TimerBase.RatioRemaining
  isSpec: "True"
  fullName: Chronity.TimerBase.RatioRemaining
  nameWithType: TimerBase.RatioRemaining
- uid: Chronity.TimerBase.Resume
  name: Resume()
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Resume
  commentId: M:Chronity.TimerBase.Resume
  fullName: Chronity.TimerBase.Resume()
  nameWithType: TimerBase.Resume()
- uid: Chronity.TimerBase.Resume*
  name: Resume
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Resume_
  commentId: Overload:Chronity.TimerBase.Resume
  isSpec: "True"
  fullName: Chronity.TimerBase.Resume
  nameWithType: TimerBase.Resume
- uid: Chronity.TimerBase.TimeDelta
  name: TimeDelta
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_TimeDelta
  commentId: P:Chronity.TimerBase.TimeDelta
  fullName: Chronity.TimerBase.TimeDelta
  nameWithType: TimerBase.TimeDelta
- uid: Chronity.TimerBase.TimeDelta*
  name: TimeDelta
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_TimeDelta_
  commentId: Overload:Chronity.TimerBase.TimeDelta
  isSpec: "True"
  fullName: Chronity.TimerBase.TimeDelta
  nameWithType: TimerBase.TimeDelta
- uid: Chronity.TimerBase.TimeElapsed
  name: TimeElapsed
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_TimeElapsed
  commentId: P:Chronity.TimerBase.TimeElapsed
  fullName: Chronity.TimerBase.TimeElapsed
  nameWithType: TimerBase.TimeElapsed
- uid: Chronity.TimerBase.TimeElapsed*
  name: TimeElapsed
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_TimeElapsed_
  commentId: Overload:Chronity.TimerBase.TimeElapsed
  isSpec: "True"
  fullName: Chronity.TimerBase.TimeElapsed
  nameWithType: TimerBase.TimeElapsed
- uid: Chronity.TimerBase.TimeRemaining
  name: TimeRemaining
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_TimeRemaining
  commentId: P:Chronity.TimerBase.TimeRemaining
  fullName: Chronity.TimerBase.TimeRemaining
  nameWithType: TimerBase.TimeRemaining
- uid: Chronity.TimerBase.TimeRemaining*
  name: TimeRemaining
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_TimeRemaining_
  commentId: Overload:Chronity.TimerBase.TimeRemaining
  isSpec: "True"
  fullName: Chronity.TimerBase.TimeRemaining
  nameWithType: TimerBase.TimeRemaining
- uid: Chronity.TimerBase.Update
  name: Update()
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Update
  commentId: M:Chronity.TimerBase.Update
  fullName: Chronity.TimerBase.Update()
  nameWithType: TimerBase.Update()
- uid: Chronity.TimerBase.Update*
  name: Update
  href: api/Chronity.TimerBase.html#Chronity_TimerBase_Update_
  commentId: Overload:Chronity.TimerBase.Update
  isSpec: "True"
  fullName: Chronity.TimerBase.Update
  nameWithType: TimerBase.Update
- uid: Chronity.TimerExtension
  name: TimerExtension
  href: api/Chronity.TimerExtension.html
  commentId: T:Chronity.TimerExtension
  fullName: Chronity.TimerExtension
  nameWithType: TimerExtension
- uid: Chronity.TimerExtension.RegisterTimer(MonoBehaviour,System.Single,System.Action,System.Action{System.Single},System.Boolean,System.Boolean,System.Boolean)
  name: RegisterTimer(MonoBehaviour, Single, Action, Action<Single>, Boolean, Boolean, Boolean)
  href: api/Chronity.TimerExtension.html#Chronity_TimerExtension_RegisterTimer_MonoBehaviour_System_Single_System_Action_System_Action_System_Single__System_Boolean_System_Boolean_System_Boolean_
  commentId: M:Chronity.TimerExtension.RegisterTimer(MonoBehaviour,System.Single,System.Action,System.Action{System.Single},System.Boolean,System.Boolean,System.Boolean)
  name.vb: RegisterTimer(MonoBehaviour, Single, Action, Action(Of Single), Boolean, Boolean, Boolean)
  fullName: Chronity.TimerExtension.RegisterTimer(MonoBehaviour, System.Single, System.Action, System.Action<System.Single>, System.Boolean, System.Boolean, System.Boolean)
  fullName.vb: Chronity.TimerExtension.RegisterTimer(MonoBehaviour, System.Single, System.Action, System.Action(Of System.Single), System.Boolean, System.Boolean, System.Boolean)
  nameWithType: TimerExtension.RegisterTimer(MonoBehaviour, Single, Action, Action<Single>, Boolean, Boolean, Boolean)
  nameWithType.vb: TimerExtension.RegisterTimer(MonoBehaviour, Single, Action, Action(Of Single), Boolean, Boolean, Boolean)
- uid: Chronity.TimerExtension.RegisterTimer*
  name: RegisterTimer
  href: api/Chronity.TimerExtension.html#Chronity_TimerExtension_RegisterTimer_
  commentId: Overload:Chronity.TimerExtension.RegisterTimer
  isSpec: "True"
  fullName: Chronity.TimerExtension.RegisterTimer
  nameWithType: TimerExtension.RegisterTimer
